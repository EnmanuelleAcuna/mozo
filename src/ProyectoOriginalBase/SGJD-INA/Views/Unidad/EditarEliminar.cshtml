@using SGJD_INA.Models.ViewModels

@model EditarUnidadViewModel

@{
    ViewBag.Title = "Editar unidad";
    Layout = "~/Views/Shared/_LayoutEmpty.cshtml";
}

@if (ViewBag.EditarBorrar.Equals("EDITAR")) {
    @* Encabezado / Título del PopUp / Modal / Dialog *@
    <h6 class="center text-uppercase mb-2">
        Editar Unidad
    </h6>

    using (Html.BeginForm("Editar", "Unidad", FormMethod.Post, new { onsubmit = "return SubmitForm(this)", autocomplete = "off" })) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "data-error" })

        @Html.HiddenFor(model => model.IdUnidad)

        <div class="row mb-0">
            <div class="col s12">
                <div class="input-field">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "validate width-320px" } })
                    @Html.LabelFor(model => model.Nombre, new { @class = "active" })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "helper-text" })
                </div>
            </div>
        </div>

        <div class="row mb-0">
            <div class="col s12">
                <div class="input-field">
                    @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "validate width-320px" } })
                    @Html.LabelFor(model => model.Correo, new { @class = "active" })
                    @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "helper-text" })
                </div>
            </div>
        </div>

        <div class="center">
            <button type="submit" title="Guardar" value="Guardar" class="btn btn-small yellow black-text waves-effect waves-light font-bold fz-0-8r">
                Guardar
            </button>

            <button type="button" title="Cancelar" value="Cancelar" class="btn btn-small grey lighten-3 red-text waves-effect fz-0-8r" onclick="CerrarDialog()">
                Cancelar
            </button>
        </div>
    }
}
else if (ViewBag.EditarBorrar.Equals("ELIMINAR")) {
    @* Encabezado / Título del PopUp / Modal / Dialog *@
    <h6 class="center text-uppercase mb-2">
        Eliminar unidad
    </h6>

    using (Html.BeginForm("Eliminar", "Unidad", FormMethod.Post, new { onsubmit = "return SubmitForm(this)", autocomplete = "off" })) {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.IdUnidad)
        @Html.HiddenFor(model => model.Nombre)
        @Html.HiddenFor(model => model.Correo)

        <div class="mb-2 black-text center">
            ¿Desea eliminar la unidad:
            <span class="font-bold fz-1r black-text">@Html.DisplayFor(model => model.Nombre)</span>?
        </div>

        <div class="center">
            <button type="submit" title="Eliminar" value="Eliminar" class="btn btn-small grey lighten-3 red-text font-bold waves-effect waves-light fz-0-8r">
                Eliminar
            </button>
            <button type="button" title="Cancelar" value="Cancelar" class="btn btn-small grey lighten-3 blue-text waves-effect fz-0-8r" onclick="CerrarDialog()">
                Cancelar
            </button>
        </div>
    }
}