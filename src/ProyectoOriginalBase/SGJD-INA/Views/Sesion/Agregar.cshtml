@using SGJD_INA.Models.ViewModels

@model AgregarSesionViewModel

@{
    ViewBag.Title = "Agregar Sesión";
    Layout = "~/Views/Shared/_LayoutEmpty.cshtml";
}

@* Encabezado / Título del PopUp / Modal / Dialog *@
<h6 class="center text-uppercase mb-2">
    Agregar Sesión
</h6>

@using (Html.BeginForm("Agregar", "Sesion", FormMethod.Post, new { onsubmit = "return SubmitFormAgregarSesion(this)", autocomplete = "off" })) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "data-error" })

    <div class="row mb-0">
        <div class="col s12">
            <div class="input-field mt-0 mb-1">
                @Html.LabelFor(model => model.IdTipoSesion, new { @class = "active black-text font-bold" })
                @Html.DropDownListFor(model => model.IdTipoSesion, new SelectList(ViewBag.ListaTiposSesion, "Id", "Descripcion"), new { @class = "browser-default" })
                @Html.ValidationMessageFor(model => model.IdTipoSesion, "", new { @class = "helper-text" })
            </div>
        </div>
    </div>

    <div class="row mb-0">
        <div class="col s12 m6">
            <div class="input-field">
                @Html.TextBoxFor(model => model.Fecha, new { @class = "validate", placeholder = "31/12/2000", autocomplete = "off" })
                @Html.LabelFor(model => model.Fecha, new { @class = "active" })
                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "helper-text" })
            </div>
        </div>

        <div class="col s12 m6">
            <div class="input-field black-text">
                @Html.TextBoxFor(model => model.Hora, new { @class = "validate", placeholder = "00:00 AM" })
                @Html.LabelFor(model => model.Hora, new { @class = "active" })
                @Html.ValidationMessageFor(model => model.Hora, "", new { @class = "helper-text" })
            </div>
        </div>
    </div>

    <div class="center">
        <button type="submit" title="Agregar" value="Agregar" class="btn btn-small yellow black-text font-bold waves-effect waves-light fz-0-8r">
            Agregar
        </button>
        <button type="button" title="Cancelar" value="Cancelar" class="btn btn-small grey lighten-3 red-text waves-effect fz-0-8r" onclick="CerrarDialog()">
            Cancelar
        </button>
    </div>
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            // Inicializar datepicker y timepicker de materialize que se encuentra dentro del PopUp
            // Debe ser realizado puesto que cuando se carga esta vista en el PopUp ya los scripts de LayOut se ejecutaron
            var DatePicker = document.getElementById('Fecha');
            M.Datepicker.init(DatePicker, { format: 'dd/mm/yyyy', i18n: parametrosi18n });

            var TimePicker = document.getElementById('Hora');
            M.Timepicker.init(TimePicker, { i18n: parametrosi18nTimePicker });

            // Sobreescribir validador de jQuery para que verifique el formato de fecha
            // Se coloca acá ya que para que funcione, en la vista se debe cargar primero jqueryval
            $.validator.addMethod('date', function (value, element) {
                if (this.optional(element)) {
                    return true;
                }
                var valid = true;
                try {
                    $.datepicker.parseDate('dd/mm/yy', value);
                }
                catch (err) {
                    valid = false;
                }
                return valid;
            });
        });
    </script>
}