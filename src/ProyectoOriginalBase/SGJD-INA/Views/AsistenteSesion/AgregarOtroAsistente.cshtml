@using SGJD_INA.Models.ViewModels

@model AgregarOtroAsistenteSesionViewModel

@{
    ViewBag.Title = "Agregar Otro Asistente Sesión";
    Layout = "~/Views/Shared/_LayoutEmpty.cshtml";
}

@* Encabezado / Título del PopUp / Modal / Dialog *@
<h6 class="center text-uppercase mb-2">
    Agregar otro asistente a sesión
</h6>

@using (Html.BeginForm("AgregarOtroAsistente", "AsistenteSesion", FormMethod.Post, new { onsubmit = "return SubmitFormAgregar(this)", autocomplete = "off" })) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "data-error" })
    @Html.HiddenFor(model => model.IdSesion)

    <section class="section">
        <div class="input-field">
            @Html.EditorFor(model => model.Nombre, new { @class = "validate", @autocomplete = "off" })
            @Html.LabelFor(model => model.Nombre)
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "helper-text" })
        </div>

        <div class="input-field">
            @Html.EditorFor(model => model.Puesto, new { @class = "validate" })
            @Html.LabelFor(model => model.Puesto, "Puesto")
            @Html.ValidationMessageFor(model => model.Puesto, "", new { @class = "helper-text" })
        </div>

        <div class="input-field mt-0 mb-1">
            <label class="po-relative fz-1 focus-text">Tipo de Usuario: </label>
            @Html.DropDownListFor(model => model.IdTipoUsuario, new SelectList(ViewBag.TipoUsuario, "id", "nombre"), new { @class = "browser-default" })
            @Html.ValidationMessageFor(model => model.IdTipoUsuario, "", new { @class = "helper-text" })
        </div>

        <div class="row">
            <div class="col s12 m6">
                <div class="input-field black-text">
                    @Html.TextBoxFor(model => model.HoraInicio, new { @class = "timepicker validate center-on-small center", @required = "required", @placeholder = "Hora entrada" })
                </div>
            </div>

            <div class="col s12 m6">
                <div class="input-field black-text">
                    @Html.TextBoxFor(model => model.HoraFin, new { @class = "timepicker validate center-on-small center", @required = "required", @placeholder = "Hora salida" })
                </div>
            </div>
        </div>

        <div class="center">
            <button type="submit" title="Agregar" value="Agregar" class="btn btn-small yellow black-text font-bold waves-effect waves-light btn-accion">
                Agregar
            </button>
            <button type="button" title="Cancelar" value="Cancelar" class="btn btn-small grey lighten-3 red-text font-bold waves-effect btn-accion" onclick="CerrarDialog()">
                Cancelar
            </button>
        </div>
    </section>
}

@section Scripts {
    <script type="text/javascript">
        // Inicializar datepicker y timepicker de materialize que se encuentra dentro del PopUp
        // Debe ser realizado puesto que cuando se carga esta vista en el PopUp ya los scripts de LayOut se ejecutaron
        var DatePicker = document.querySelectorAll('.datepicker');
        M.Datepicker.init(DatePicker, { format: 'dd/mm/yyyy', i18n: parametrosi18n, autoClose: true, container: ".main-container" });
        $(".timepicker").timepicker({ i18n: parametrosi18nTimePicker });
    </script>
}


